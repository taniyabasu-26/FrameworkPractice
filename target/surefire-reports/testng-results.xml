<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-01T21:41:46 IST" name="Suite" finished-at="2025-06-01T21:42:44 IST" duration-ms="57708">
    <groups>
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" name="submitOrder" class="Automation.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
      <group name="Error Handling">
        <method signature="ErrorValidationTest.loginErrorValidation()[pri:0, instance:Automation.Tests.ErrorValidationTest@1f9e9475]" name="loginErrorValidation" class="Automation.Tests.ErrorValidationTest"/>
      </group> <!-- Error Handling -->
    </groups>
    <test started-at="2025-06-01T21:41:46 IST" name="Error Validations Test" finished-at="2025-06-01T21:42:21 IST" duration-ms="34477">
      <class name="Automation.Tests.ErrorValidationTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Automation.Tests.ErrorValidationTest@1f9e9475]" started-at="2025-06-01T21:41:46 IST" name="lunchApplication" finished-at="2025-06-01T21:41:57 IST" duration-ms="11125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:Automation.Tests.ErrorValidationTest@1f9e9475]" started-at="2025-06-01T21:41:57 IST" name="loginErrorValidation" finished-at="2025-06-01T21:41:58 IST" duration-ms="512" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email and password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email and password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Automation.Tests.ErrorValidationTest.loginErrorValidation(ErrorValidationTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Automation.Tests.ErrorValidationTest@1f9e9475]" started-at="2025-06-01T21:41:58 IST" name="closeBrowser" finished-at="2025-06-01T21:41:59 IST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Automation.Tests.ErrorValidationTest@1f9e9475]" started-at="2025-06-01T21:41:59 IST" name="lunchApplication" finished-at="2025-06-01T21:42:06 IST" duration-ms="6409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:Automation.Tests.ErrorValidationTest@1f9e9475]" started-at="2025-06-01T21:42:06 IST" name="productErrorValidation" finished-at="2025-06-01T21:42:19 IST" duration-ms="13537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Automation.Tests.ErrorValidationTest@1f9e9475]" started-at="2025-06-01T21:42:19 IST" name="closeBrowser" finished-at="2025-06-01T21:42:21 IST" duration-ms="1452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- Automation.Tests.ErrorValidationTest -->
    </test> <!-- Error Validations Test -->
    <test started-at="2025-06-01T21:41:46 IST" name="Submit Order Test" finished-at="2025-06-01T21:42:44 IST" duration-ms="57708">
      <class name="Automation.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:41:47 IST" name="lunchApplication" finished-at="2025-06-01T21:41:57 IST" duration-ms="10221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:41:57 IST" name="submitOrder" data-provider="getData" finished-at="2025-06-01T21:42:12 IST" duration-ms="15007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Tani@2613, email=taniya09@yomail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:42:12 IST" name="closeBrowser" finished-at="2025-06-01T21:42:13 IST" duration-ms="948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:42:13 IST" name="lunchApplication" finished-at="2025-06-01T21:42:20 IST" duration-ms="7257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:42:20 IST" name="submitOrder" data-provider="getData" finished-at="2025-06-01T21:42:35 IST" duration-ms="14863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Rajiv@123, email=rajiv09@yopmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:42:35 IST" name="closeBrowser" finished-at="2025-06-01T21:42:36 IST" duration-ms="971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:42:36 IST" name="lunchApplication" finished-at="2025-06-01T21:42:42 IST" duration-ms="6283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="orderHistory()[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:42:42 IST" name="orderHistory" finished-at="2025-06-01T21:42:43 IST" depends-on-methods="Automation.Tests.SubmitOrderTest.submitOrder" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Automation.Tests.SubmitOrderTest@25be7b63]" started-at="2025-06-01T21:42:43 IST" name="closeBrowser" finished-at="2025-06-01T21:42:44 IST" duration-ms="998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- Automation.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
